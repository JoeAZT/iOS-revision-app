
{
    "name": "General4",
    "questions": [
        {
            "questionText": "What is the purpose of the @escaping keyword in Swift?",
            "possibleAnswers": [
                { "optionText": "To indicate that a closure may outlive the functionâ€™s execution", "isAnswer": true },
                { "optionText": "To mark closures that prevent memory leaks by deallocating after use", "isAnswer": false },
                { "optionText": "To enhance closure performance by optimizing execution", "isAnswer": false },
                { "optionText": "To use a closure in multiple threads simultaneously", "isAnswer": false }
            ]
        },
        {
            "questionText": "What is a protocol in Swift?",
            "possibleAnswers": [
                { "optionText": "A blueprint of methods and properties that a class, struct, or enum can adopt", "isAnswer": true },
                { "optionText": "A loop used to iterate over collections and perform operations", "isAnswer": false },
                { "optionText": "A data structure for managing collections of objects", "isAnswer": false },
                { "optionText": "A method for handling errors and ensuring safe code execution", "isAnswer": false }
            ]
        },
        {
            "questionText": "What is Core Data used for?",
            "possibleAnswers": [
                { "optionText": "For managing object graphs and persistent storage", "isAnswer": true },
                { "optionText": "For creating animations and handling UI rendering", "isAnswer": false },
                { "optionText": "For managing network requests and secure data storage", "isAnswer": false },
                { "optionText": "For organizing views and layout hierarchies in iOS", "isAnswer": false }
            ]
        },
        {
            "questionText": "What is the difference between frame and bounds in iOS?",
            "possibleAnswers": [
                { "optionText": "Frame is a view's size and position in its superview; bounds is in its own coordinate system", "isAnswer": true },
                { "optionText": "Bounds define animations; frame is for layout positioning", "isAnswer": false },
                { "optionText": "Frame is used for drawing; bounds is for positioning on screen", "isAnswer": false },
                { "optionText": "No difference; frame and bounds are interchangeable", "isAnswer": false }
            ]
        },
        {
            "questionText": "What is the purpose of the 'lazy' keyword in Swift?",
            "possibleAnswers": [
                { "optionText": "To delay property initialization until it is first accessed", "isAnswer": true },
                { "optionText": "To preload data into memory before it is needed", "isAnswer": false },
                { "optionText": "To automatically deallocate unused properties after time", "isAnswer": false },
                { "optionText": "To create static variables shared across class instances", "isAnswer": false }
            ]
        },
        {
            "questionText": "How does memory management work in iOS?",
            "possibleAnswers": [
                { "optionText": "iOS uses ARC to manage memory by tracking and releasing unused objects", "isAnswer": true },
                { "optionText": "Developers must manually allocate and free memory for objects", "isAnswer": false },
                { "optionText": "Memory is managed by the operating system without developer intervention", "isAnswer": false },
                { "optionText": "Memory management isn't a concern in iOS; modern devices handle it", "isAnswer": false }
            ]
        },
        {
            "questionText": "What is SwiftUI?",
            "possibleAnswers": [
                { "optionText": "A framework for building user interfaces across all Apple platforms using a declarative Swift syntax", "isAnswer": true },
                { "optionText": "A new programming language developed by Apple as a replacement for Objective-C", "isAnswer": false },
                { "optionText": "A tool for managing databases and persistent storage in iOS applications", "isAnswer": false },
                { "optionText": "A type of data structure used for organizing complex data models in iOS applications", "isAnswer": false }
            ]
        },
        {
            "questionText": "What is a property wrapper in Swift?",
            "possibleAnswers": [
                { "optionText": "A custom attribute that can add behavior to properties while keeping the declaration clean", "isAnswer": true },
                { "optionText": "A tool for creating loops and iterating over collections in Swift", "isAnswer": false },
                { "optionText": "A method for error handling that wraps properties for safe execution", "isAnswer": false },
                { "optionText": "A design pattern used for delegation and communication between objects", "isAnswer": false }
            ]
        },
        {
            "questionText": "What is the purpose of the @State keyword in SwiftUI?",
            "possibleAnswers": [
                { "optionText": "To create mutable state tied to the view lifecycle, ensuring UI updates", "isAnswer": true },
                { "optionText": "To create a constant value shared across views within a SwiftUI application", "isAnswer": false },
                { "optionText": "To handle network requests and manage data fetching within a view", "isAnswer": false },
                { "optionText": "To define view hierarchies and manage UI layout", "isAnswer": false }
            ]
        },
        {
            "questionText": "What is the difference between @State and @Binding in SwiftUI?",
            "possibleAnswers": [
                { "optionText": "@State manages local state; @Binding passes a reference for two-way binding", "isAnswer": true },
                { "optionText": "@State is for local variables; @Binding is for global constants", "isAnswer": false },
                { "optionText": "@Binding is for managing classes; @State is for structs", "isAnswer": false },
                { "optionText": "No significant difference; both can be used interchangeably", "isAnswer": false }
            ]
        }
    ]
}

